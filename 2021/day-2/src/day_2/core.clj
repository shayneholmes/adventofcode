(ns day-2.core)

(defn foo
  "I don't do a whole lot."
  [x]
  (println x "Hello, World!"))
(def forward 'f)
(def down 'd)
(def up 'u)

; input data
(def input [forward 2 down 9 up 6 forward 1 down 5 down 7 down 9 forward 9 down 8 up 7 forward 2 up 6 forward 4 down 5 down 9 up 1 down 9 forward 8 forward 6 forward 6 forward 5 forward 9 up 3 up 5 forward 1 down 4 down 7 forward 2 up 3 down 8 forward 1 down 2 forward 3 up 1 up 1 up 7 forward 5 up 8 forward 8 forward 8 down 6 forward 1 forward 5 forward 4 forward 6 forward 5 down 6 down 9 forward 9 down 8 forward 6 down 5 forward 9 up 3 up 1 down 8 down 7 down 9 forward 7 down 8 down 9 down 5 down 3 forward 1 forward 6 down 1 forward 9 down 5 forward 7 up 2 down 8 forward 1 down 4 down 9 down 4 up 5 forward 4 forward 6 forward 1 down 3 forward 1 down 6 up 5 up 4 forward 6 forward 1 forward 1 down 2 up 4 up 3 up 2 up 6 down 6 forward 1 down 8 forward 1 up 6 forward 7 down 5 forward 4 forward 6 down 4 forward 4 down 4 down 4 forward 2 forward 8 down 5 down 1 down 8 up 5 up 8 down 5 forward 4 down 6 up 7 forward 2 down 3 forward 2 forward 2 down 9 down 3 up 6 forward 8 up 2 up 9 forward 4 down 1 down 5 forward 4 down 2 down 3 forward 5 down 4 forward 7 up 4 forward 6 up 8 forward 1 up 9 down 4 forward 2 down 1 forward 7 down 3 down 2 forward 5 down 3 down 9 down 9 up 5 forward 2 down 8 up 9 forward 4 down 3 forward 3 forward 6 up 2 forward 3 down 1 down 1 down 1 forward 7 forward 4 forward 7 down 5 down 6 down 2 forward 6 down 3 up 6 forward 4 down 8 up 1 forward 8 down 2 down 5 forward 4 down 9 forward 2 forward 2 down 3 forward 3 down 1 forward 2 down 7 forward 3 forward 9 up 9 forward 6 forward 2 down 1 down 5 forward 6 forward 6 down 3 up 3 forward 9 down 7 down 2 down 4 down 7 forward 5 up 4 forward 8 down 5 forward 7 down 7 up 7 down 8 forward 9 up 5 forward 1 down 2 forward 5 down 9 forward 3 down 5 forward 8 forward 3 up 5 down 2 up 3 forward 2 up 1 up 5 down 8 forward 2 down 5 up 4 up 5 up 2 forward 9 forward 6 down 9 up 9 forward 6 forward 4 forward 3 forward 7 up 1 down 2 down 6 down 1 forward 8 down 1 forward 6 down 8 forward 8 down 7 down 6 down 5 forward 2 up 8 up 6 up 5 down 1 forward 1 down 1 down 5 forward 7 forward 3 down 1 forward 5 forward 5 forward 8 down 1 up 2 down 6 up 6 forward 6 forward 6 down 3 forward 9 up 4 forward 4 down 6 up 1 forward 6 down 2 down 5 down 2 down 6 up 5 down 1 down 1 forward 3 forward 7 forward 3 up 2 down 8 down 4 down 1 down 5 down 1 down 9 forward 6 down 6 down 4 down 6 down 8 forward 4 down 6 down 7 forward 8 down 4 up 4 down 1 forward 1 forward 4 forward 1 up 9 down 7 forward 7 down 4 forward 1 up 4 forward 4 down 5 down 7 forward 5 forward 7 forward 1 forward 1 forward 9 forward 9 up 3 forward 4 down 2 forward 9 up 8 forward 3 up 5 down 3 down 8 forward 8 down 6 forward 1 down 6 down 6 up 9 down 2 forward 8 up 9 down 7 up 9 up 8 up 1 forward 6 forward 9 down 2 forward 8 down 1 up 4 forward 4 forward 7 up 2 forward 4 down 5 forward 3 down 2 down 7 down 4 down 2 up 5 down 5 down 5 down 4 up 1 forward 7 down 6 forward 5 forward 1 down 4 up 9 down 5 forward 7 forward 5 down 6 down 3 down 9 down 1 forward 6 up 2 down 7 down 3 down 6 up 3 down 4 down 4 forward 9 down 3 forward 2 down 9 down 8 up 4 down 2 forward 2 down 5 down 4 down 4 down 2 forward 6 down 3 forward 1 down 4 forward 7 down 5 up 4 down 6 forward 8 down 6 forward 2 forward 4 forward 5 forward 7 forward 4 forward 5 down 8 down 7 forward 3 forward 5 up 7 forward 1 down 4 forward 5 forward 4 forward 4 down 5 down 8 forward 8 down 1 down 1 down 5 up 5 forward 6 down 6 forward 3 forward 4 forward 7 forward 4 down 8 forward 2 down 4 forward 4 down 1 up 2 forward 6 up 1 down 7 down 9 forward 7 forward 2 up 3 down 2 down 9 down 5 up 7 forward 1 forward 8 down 8 up 3 down 3 forward 9 up 4 down 5 up 5 down 1 up 8 forward 9 down 3 up 6 forward 6 forward 1 down 1 forward 9 down 8 forward 8 down 6 up 9 down 4 up 3 up 9 forward 2 down 2 down 2 forward 3 down 2 forward 5 forward 4 up 8 forward 9 up 7 forward 2 down 5 down 6 forward 8 up 7 forward 4 forward 3 up 5 down 8 forward 3 up 2 down 3 forward 6 down 9 down 2 down 6 down 2 forward 7 forward 5 forward 7 down 8 forward 2 down 2 forward 8 up 8 forward 4 forward 3 up 5 down 3 forward 3 up 8 up 7 down 4 down 1 forward 2 down 1 up 6 up 4 down 3 up 1 forward 7 forward 7 forward 7 forward 8 down 1 forward 5 down 6 forward 9 forward 7 forward 7 down 4 up 4 down 6 down 9 up 4 up 2 up 6 forward 4 up 4 up 6 down 2 forward 4 down 9 forward 9 forward 9 down 1 forward 7 down 2 down 7 down 8 down 8 down 9 up 9 down 5 forward 5 forward 7 forward 4 down 7 forward 8 forward 1 down 8 up 9 down 7 forward 9 forward 4 forward 8 down 9 forward 4 down 3 forward 3 down 1 down 1 down 2 up 5 down 2 down 1 down 8 forward 3 up 2 forward 7 down 3 down 8 down 1 forward 4 forward 7 down 5 forward 6 down 6 down 2 forward 6 down 3 up 4 down 7 forward 7 up 1 up 9 down 1 down 2 down 8 down 7 up 1 forward 7 down 2 forward 4 forward 6 forward 9 down 6 forward 2 up 8 down 2 up 2 up 5 down 8 up 6 down 9 forward 6 down 8 down 6 down 1 up 7 up 6 down 8 forward 2 up 7 forward 5 forward 7 forward 7 up 5 forward 2 down 9 up 2 up 8 up 2 down 3 down 7 forward 9 down 3 up 9 forward 8 up 8 forward 4 forward 8 forward 6 up 1 down 3 up 1 down 1 forward 2 forward 1 forward 4 forward 7 up 8 down 9 up 2 down 7 forward 4 down 3 forward 4 forward 2 down 9 forward 8 forward 5 forward 3 down 6 forward 4 forward 4 forward 9 forward 4 up 5 down 7 up 6 forward 5 down 5 forward 4 down 5 forward 7 forward 3 forward 5 down 5 forward 4 down 5 up 4 down 8 up 3 down 3 up 5 forward 4 forward 5 down 6 forward 6 forward 1 forward 8 down 6 down 9 up 5 forward 2 forward 8 up 6 down 6 forward 2 down 8 forward 7 forward 7 down 5 forward 5 forward 8 forward 1 down 4 down 2 down 5 up 4 forward 3 forward 5 down 4 down 7 down 4 up 9 up 6 forward 1 down 8 up 8 up 9 forward 2 forward 1 down 6 forward 6 down 4 forward 7 up 2 up 1 forward 4 down 1 forward 8 forward 3 up 7 up 5 down 1 forward 8 forward 6 up 6 forward 9 down 5 down 9 forward 2 down 3 up 1 up 7 down 1 forward 8 up 9 down 1 down 5 down 7 down 5 down 5 down 5 up 9 forward 9 forward 7 forward 4 forward 6 down 5 down 3 forward 9 forward 1 down 1 down 8 up 4 down 9 forward 9 up 1 down 5 forward 8 up 6 forward 3 down 6 up 8 down 7 forward 3 forward 6 down 7 forward 6 forward 4 forward 4 down 4 forward 6 forward 5 down 6 forward 6 down 7 forward 6 forward 3 up 4 up 2 up 6 down 2 down 8 forward 5 forward 1 up 4 forward 7 forward 9 up 6 down 7 down 3 up 5 forward 5 down 8 up 1 down 1 down 3 down 2 down 1 forward 5 down 3 down 5 forward 7 forward 9 down 3 forward 7 forward 5 forward 4 forward 2 forward 7 forward 8 forward 6 down 8 forward 5 forward 6 forward 6 down 8 down 2 forward 4 down 7 forward 6 down 7 down 4 forward 6 up 6 forward 4 forward 9 forward 2 forward 3 forward 1 down 8 down 3 forward 4 up 3 forward 7 forward 1 down 7 down 8 forward 1 up 8 forward 8 up 8 down 5 forward 6 down 8 down 4 down 9 up 1 down 3 forward 6 down 6 forward 7 forward 3 down 6 down 6 forward 4 down 4 down 1 down 8 forward 2 forward 8 forward 8 down 6 forward 9 down 9 down 5 down 5 forward 7 down 1 forward 1 down 1 down 6 down 1 forward 1 up 6 up 9 forward 5 down 6 forward 8 forward 6 down 7 forward 1 forward 4 forward 9 forward 2 forward 4 down 2 forward 1 forward 8 down 1 down 1 forward 4 down 5 down 3 down 9 down 2 up 8 down 7 down 1 down 9 forward 2 forward 2 up 3 forward 3 down 3 forward 5 forward 9 down 7 up 7 down 9 forward 3 forward 7 down 1 forward 8 down 8 forward 1 down 8 down 6 forward 2 down 3 down 1 down 8 forward 3 up 5 down 7 up 2 up 8 forward 5 up 7 down 6 up 7 down 9 forward 5 up 4 forward 9 down 5 up 7 down 2 up 2 up 7 forward 5 down 6 forward 4 down 4 down 3 forward 2 up 2 down 5 forward 8 down 3 up 7 down 1 down 7 forward 7 forward 4 forward 7 down 2 down 9 down 6 down 9 down 2 down 9 down 7 down 5 forward 4 up 5 up 7 forward 2 forward 7 down 3 down 3 forward 4])

(defn make-tuples
  ([in] (make-tuples in []))
  ([in acc] (if (empty? in) acc
              (make-tuples (rest (rest in)) (conj acc (take 2 in)))
              )))

(def tuples (make-tuples input))

tuples ; looks good!

(defn apply-dir [tuples x y]
  (if (empty? tuples) [x y]
      (let [[[dir dist] & rest] tuples]
        (case dir
          f (recur rest (+ x dist) y)
          d (recur rest x (+ y dist))
          u (recur rest x (- y dist))
          :else (throw 'foo)
          ))
      )
  )

(apply-dir tuples 0 0)
(apply * (apply-dir tuples 0 0))

; Part Two

(defn apply-dir-with-aim [tuples x y aim]
  (if (empty? tuples) [x y aim]
      (let [[[dir dist] & rest] tuples]
        (case dir
          f (recur rest (+ x dist) (+ y (* dist aim)) aim)
          d (recur rest x y (+ aim dist))
          u (recur rest x y (- aim dist))
          :else (throw 'foo)
          ))
      )
  )

(apply-dir-with-aim tuples 0 0 0)

; Day 3

(def consumption [2r010110011101 2r101100111000 2r100100000011 2r111000010001 2r001100010011 2r010000111100 2r001000100011 2r001000100111 2r010001111110 2r111101001011 2r011000101011 2r111100111001 2r100101111011 2r101100110110 2r101010111001 2r001111000110 2r001001101000 2r101011001010 2r011101111010 2r011101001010 2r011001000001 2r100001010000 2r111011001101 2r000111110111 2r010011001111 2r000111011001 2r111000010100 2r101001100100 2r110010001101 2r111110101000 2r011001100010 2r110010110101 2r010000001101 2r100000000100 2r110111011110 2r110001100110 2r001011110111 2r110000011110 2r110110101010 2r101001100110 2r010000001010 2r100010100100 2r101000111101 2r111000001011 2r000000100100 2r100111010110 2r010101011100 2r011111010100 2r100000001100 2r111000011110 2r010001001011 2r100110000101 2r001111111000 2r110110111001 2r011100010111 2r111011101001 2r100010101010 2r110110100101 2r101110110100 2r000110111011 2r100100000110 2r111011111101 2r111001111001 2r110011101000 2r100110111111 2r000010100010 2r011010010101 2r110101100001 2r000100100001 2r000111010000 2r001001000111 2r110111110101 2r000100010111 2r110000000111 2r101111011001 2r001010001100 2r000010001010 2r001010111100 2r110101111011 2r100101001110 2r000100101010 2r101110001110 2r110110010010 2r110100000000 2r001000101110 2r110111110000 2r001111011100 2r111010000000 2r101000100100 2r010010111101 2r110110111000 2r001001100101 2r010111110111 2r010010001010 2r000100011100 2r001111110011 2r000100101110 2r011000010010 2r111000000011 2r001110100110 2r110111110001 2r011111110100 2r010010001101 2r011000100101 2r110011011110 2r100110101001 2r100101010111 2r010100010111 2r101101110001 2r011101110111 2r110101011000 2r001100101011 2r110101100011 2r110100101011 2r000110101100 2r101100110111 2r111101011011 2r000001100010 2r010010101100 2r110001001001 2r111111100001 2r110111010111 2r101100001011 2r000100011110 2r000011101010 2r101011000110 2r101011110011 2r010101001100 2r100011111011 2r111111001001 2r000100111001 2r011011011000 2r100001110000 2r000001011100 2r101100101010 2r011110110011 2r111111101001 2r000000100010 2r111111001000 2r001110000110 2r100000100100 2r001111001000 2r001100101100 2r001001100100 2r010010100010 2r110111101101 2r111011100100 2r110001111001 2r101111101011 2r000110100001 2r010011111011 2r110101010100 2r100000111111 2r110101010010 2r110101100111 2r001011111000 2r100110011000 2r100100010111 2r101110101001 2r110110110111 2r001000011001 2r100010111011 2r000011010010 2r111111100110 2r011101011001 2r101101011000 2r101011101101 2r101101100001 2r111001000110 2r000011010011 2r110111001100 2r000100010110 2r010110001001 2r000110110101 2r100010001011 2r000010001001 2r111001100110 2r011100101001 2r111010010001 2r000000011110 2r101111000110 2r111110001010 2r100001111010 2r000011110111 2r011100000010 2r011110000010 2r010010001011 2r110010000100 2r011101011101 2r000010110101 2r010111111110 2r010110000011 2r111100101011 2r101000111110 2r011101110110 2r101000100101 2r000110010001 2r010010001001 2r001001011001 2r100000101100 2r000100011111 2r101100001101 2r100111000100 2r011111000101 2r011000000011 2r100101100000 2r100111011000 2r111110011111 2r001111001010 2r000100100101 2r001111010011 2r000111100010 2r001100010100 2r111111001100 2r110000100001 2r000001011010 2r001001101101 2r101111101110 2r110100111101 2r010001110011 2r000011000111 2r011010100111 2r111110101001 2r111011111110 2r010110100001 2r001111000100 2r100010110111 2r101101100100 2r111110011000 2r000111101101 2r010111001010 2r000010110111 2r011100100100 2r001110100100 2r000111101110 2r100110110111 2r110010110100 2r001011000011 2r100010100011 2r111011100010 2r011001001000 2r111100000011 2r011110110000 2r110101011011 2r001011110000 2r110100110010 2r100111011001 2r101100010100 2r001011010111 2r011101011000 2r110000001010 2r101001010100 2r010111011011 2r001000010101 2r001100111001 2r010000001001 2r101001000000 2r101101100101 2r110101111111 2r011010001011 2r111101111000 2r111000110011 2r000001000011 2r110101110110 2r111101100001 2r000111000001 2r000111000011 2r100111101101 2r100101001111 2r101010000010 2r001010001110 2r000101110001 2r001010000101 2r101001001100 2r001110100001 2r110010011001 2r111110000000 2r100100010010 2r010011011111 2r001101010001 2r000110101000 2r010101101000 2r000010100001 2r010110010011 2r000001001010 2r100011100110 2r101001010011 2r001000011101 2r000000110001 2r100010000110 2r010110010101 2r100001110110 2r010010010010 2r010001000000 2r110011001010 2r010011011001 2r111101101001 2r000110111001 2r001101110101 2r000010110110 2r000101001011 2r000110000000 2r001100001001 2r100100111000 2r110100010101 2r000110001010 2r110100110011 2r011101001100 2r001000000111 2r010100101001 2r100011011100 2r000001100001 2r000000001011 2r110000100010 2r001111110111 2r111001011110 2r011100010110 2r100010011011 2r100000010000 2r111100100101 2r100011011001 2r000001101111 2r100111010011 2r011001100101 2r010101101001 2r110010110111 2r100111111111 2r111010111101 2r000101000110 2r100101001011 2r000001011011 2r000111001100 2r011000101010 2r101010000100 2r101001100000 2r100111101000 2r101000001111 2r010110010111 2r000011010110 2r011011010111 2r010000101000 2r011110010001 2r101010001101 2r110100011111 2r010100011010 2r101110100101 2r101101111101 2r001110011010 2r100001110101 2r011011011101 2r011110011110 2r110110001110 2r110000000100 2r101010011011 2r101101111001 2r011110101010 2r001110000011 2r101001110111 2r101010110111 2r000011001000 2r011010100010 2r000101101101 2r000101000001 2r000101011110 2r010011101000 2r011001111110 2r101111000011 2r111001010011 2r001010000111 2r001100000111 2r000101101000 2r001111100011 2r000001000101 2r010000010010 2r010110011011 2r011011010000 2r111001010000 2r100111010001 2r011110001111 2r010011000101 2r010111111010 2r001111001011 2r000000001111 2r011010011101 2r111110000111 2r000101001101 2r111000110101 2r100011101110 2r011100011001 2r010100010100 2r011001000111 2r011101000001 2r110011111111 2r100011010001 2r101100100110 2r001011001010 2r110000000000 2r111011101010 2r111010110001 2r100101110001 2r011001110000 2r001110010000 2r111010001110 2r010101100111 2r000000100101 2r100111001110 2r001001001101 2r100101110100 2r101110000000 2r101001111111 2r101100001100 2r011110011001 2r010011100101 2r000001100110 2r010000111111 2r011001010011 2r011011000110 2r000000010001 2r001100010111 2r000111100011 2r011111001111 2r010111101111 2r101111011011 2r110101110000 2r011001001101 2r001101011110 2r000110011110 2r110010000111 2r111111100111 2r010101001101 2r111111000000 2r001001011111 2r010110000100 2r111111000110 2r010011000110 2r010111101000 2r111010111100 2r111111111001 2r011011000010 2r001101110111 2r000001111100 2r111001101110 2r111111101110 2r000001111101 2r001101011001 2r100111000011 2r110001010111 2r011001010010 2r011110111110 2r110100111110 2r011100001011 2r010010111000 2r001101100101 2r111001111110 2r101011001111 2r011010010001 2r011100101010 2r000010111010 2r000101100100 2r110100110110 2r010010110000 2r110111010011 2r010110000000 2r111100010100 2r010110110011 2r001001111000 2r110000101001 2r101110010111 2r011001111001 2r101001100011 2r111011101101 2r100011000001 2r010000011010 2r000111111101 2r111000101110 2r000100001101 2r101000100010 2r001001011101 2r100010010011 2r011010100000 2r101111100010 2r000010000011 2r101101011111 2r111111000001 2r110001000100 2r011000111011 2r111101011001 2r010011111111 2r010011001001 2r000110010000 2r001110101001 2r111101000000 2r011111011011 2r010000011110 2r101101011101 2r110011110000 2r001111100000 2r011011010101 2r110010011011 2r001110010110 2r010100011100 2r000001111001 2r111000101011 2r101011010001 2r101100101000 2r111000001001 2r010010000111 2r001000101010 2r101000010111 2r000001101011 2r001011111111 2r010011111010 2r111001011101 2r101111001010 2r010011011110 2r001111010000 2r011001101110 2r101011100100 2r010010011101 2r101010010010 2r011001000011 2r101000000011 2r110101001101 2r011111000000 2r010000010001 2r111100011010 2r101100011110 2r000001010001 2r110101101101 2r010001000100 2r100001001001 2r100100000001 2r101111101010 2r111101010001 2r001010011000 2r100010101110 2r000100010001 2r010011010110 2r110000111001 2r100001100110 2r100110110011 2r000010111011 2r010110001100 2r010001100100 2r101100001111 2r001001101111 2r000011111001 2r010111010011 2r011001101000 2r111011001000 2r110111000000 2r111000011101 2r011101100011 2r010001100000 2r100111101100 2r001010110000 2r000001101110 2r101000111011 2r100111110010 2r100111001011 2r110001110101 2r000001111011 2r001110101011 2r000110001001 2r010001000101 2r111000101001 2r000101010001 2r011011011110 2r110000011111 2r011111111011 2r011100111100 2r101010011001 2r101001111101 2r101101001100 2r010101101111 2r100010001100 2r100101111111 2r010000111001 2r110110000000 2r111110111011 2r011110101000 2r000011011111 2r100000011110 2r001101110011 2r010001010001 2r010011000100 2r110001110001 2r110010011100 2r011101110000 2r100101011110 2r010100100001 2r110110101100 2r100100111101 2r100111011111 2r011111101000 2r101101000101 2r000001110101 2r010100011111 2r101011000100 2r001010011111 2r110100010111 2r010010101011 2r100111100101 2r011010101010 2r011101111100 2r110100100110 2r011110001110 2r110101011110 2r100101100100 2r001110001011 2r001101110001 2r010011110111 2r111100000111 2r100100101011 2r110010101100 2r001101110000 2r001001110110 2r101111000111 2r011010000001 2r110010100110 2r111010110011 2r100110001101 2r101101101101 2r101110011110 2r001110001100 2r010101000110 2r100101001001 2r110010101111 2r100101001101 2r111100000110 2r010000011100 2r001010011011 2r100000110110 2r001101010111 2r100110100100 2r000011101101 2r100111000000 2r111000100110 2r000101110101 2r110111000100 2r011011100110 2r110100110101 2r110000010100 2r000111011101 2r010110101011 2r100010011001 2r011010110011 2r101010010101 2r101001110110 2r110101111000 2r110001111111 2r101101110011 2r101000010101 2r101000010001 2r011111110101 2r010001000001 2r100100111110 2r100110101011 2r101101100110 2r111100100100 2r010000010011 2r100110100000 2r000000000010 2r110101000101 2r000101000000 2r000010101001 2r100110100010 2r011000110110 2r100001001011 2r100111011011 2r011000001101 2r011001100001 2r101000010011 2r010101010010 2r100100110000 2r110111100000 2r011110111000 2r001011010101 2r111111000111 2r111111010100 2r001100011010 2r000000111100 2r101111100111 2r111110110101 2r001000001111 2r011100011000 2r001011111001 2r110111010101 2r010001111000 2r001110110101 2r011000101000 2r011100101100 2r000100000000 2r100101101100 2r101010101001 2r100101000101 2r100001101110 2r011001011111 2r011010101100 2r110111011010 2r110111010100 2r010011000111 2r101011010110 2r001101001001 2r110111011100 2r111001001111 2r010100100011 2r101101111010 2r101110110110 2r111011100110 2r000000101110 2r001101100011 2r110000001111 2r100111010100 2r000011111110 2r100111001010 2r111011111100 2r111101001111 2r001101111011 2r110110010101 2r100111110100 2r100001110100 2r111001100100 2r000010110011 2r011111111101 2r010000100011 2r001110011110 2r111010101010 2r000111111110 2r100100000010 2r100110101110 2r100101111010 2r001110011011 2r011011111000 2r011100010101 2r000111001110 2r100101011100 2r001010101011 2r001100110010 2r100011000100 2r101000101110 2r110000111100 2r110111001010 2r011111011100 2r011001011110 2r001111010110 2r100101100110 2r111101100110 2r001100001010 2r001010010110 2r000101001010 2r001100110011 2r111000110001 2r001001010101 2r000000001101 2r011111001100 2r101010011000 2r100100011001 2r001100100111 2r101010110000 2r101010100111 2r011100101000 2r010010010001 2r001111011001 2r111110100110 2r101110110101 2r101101110100 2r101011111111 2r000001111110 2r110000000011 2r000111010011 2r001000000110 2r010111001001 2r000011001011 2r110101110100 2r110000110000 2r111101001101 2r101101011010 2r001010110001 2r101011100111 2r011000000100 2r111011111111 2r110000010111 2r110001011111 2r011111001011 2r011011000011 2r011100111111 2r110000101100 2r001001110011 2r000000111001 2r010011101101 2r111001010111 2r100110000110 2r001000001011 2r110011100001 2r001011010010 2r111110110100 2r000000111011 2r111011101011 2r000100110100 2r110001100111 2r011110100001 2r101000000001 2r100100101101 2r000101010011 2r000011000110 2r100110111001 2r011100101110 2r000100100111 2r011110011100 2r110100001111 2r100011001000 2r000001001100 2r010110101000 2r100101000000 2r111001101011 2r111011010110 2r000000011001 2r110110000101 2r001100000101 2r010000100001 2r100011101101 2r010001000011 2r011010111110 2r010010101110 2r000101110100 2r000010010011 2r010110010100 2r001110011000 2r101000001100 2r110001101001 2r100111110001 2r101111100110 2r000011011011 2r010011010101 2r111010111110 2r000011101000 2r010111001110 2r100100011011 2r010000010111 2r111011100111 2r110011010111 2r010100100100 2r010001011111 2r001011111100 2r110101001100 2r010001011010 2r010100110111 2r100010000000 2r101010110100 2r100010111001 2r000011000011 2r001101101111 2r000100101000 2r100001101101 2r110001000101 2r110001100000 2r111110001100 2r101010010100 2r001101111100 2r011000010110 2r011111000111 2r111001010010 2r100100011101 2r111111111000 2r111111111110 2r000101110010 2r010011111001 2r000011110011 2r101101000010 2r010001001010 2r000000000111 2r001001110010 2r110100011001 2r011000001100 2r111110001101 2r100010000111 2r101111100101 2r110010000101 2r010100110100 2r001101011000 2r100110111000 2r100011100011 2r110110011111 2r111011011010 2r000001011101 2r010101010000 2r111011010011 2r111100110110 2r001100010001 2r110011101111 2r110100111000 2r010111011100 2r100111101010 2r110011000111 2r110011011100 2r110111111100 2r011000000101 2r011111001010 2r010100011011 2r001000101001 2r101101011011 2r101001010000 2r000110111010 2r000110100101 2r010110000110 2r100000100010 2r000010000010 2r110111111001 2r001011010110 2r100011010101 2r011100000011 2r111000111011 2r010011001101 2r111000100001 2r001101010101 2r001110010010 2r100110011110 2r001111101001 2r000011111010 2r110101000110 2r101101000000 2r010110100011 2r011100111010 2r011011110001 2r000100111110 2r000001011000 2r010111101100 2r100100110110 2r101100011001 2r011101011110 2r100000100001 2r011110100010 2r000001010000 2r101110010010 2r010101111001 2r100101100111 2r010111100101 2r111010110000 2r001001010011 2r100101000010 2r011000110011 2r101001101001 2r110001011110 2r010000111000 2r000001010110 2r010101011011 2r011000010000 2r101111010000 2r011011110011 2r001010011101 2r100010111100 2r011110011101 2r010110100111 2r110100011100 2r010101001110 2r001110111111 2r011000110111 2r101100001010 2r011000010111 2r100011010000 2r011001110101 2r100100001000 2r100110000000 2r000111111001 2r011001010000 2r011111010011 2r001101011011 2r001001111101 2r000000101000 2r110001101000 2r101100001000 2r011010011110 2r001110000101 2r010010100111 2r101110111000 2r000110110110 2r011111100100 2r101010000101 2r101100100101 2r101001111000 2r001001101011 2r110001111100 2r011110111011 2r010100111001 2r011001111000 2r101110100011 2r111000111110 2r000100000111 2r100001101001 2r110100001110 2r000110011000 2r001011001011 2r010001111010 2r100100100100 2r100011010010 2r001110001111 2r000101101110 2r111000101100 2r111001110000])

(count consumption)

(bit-and 1 2r10)
(bit-shift-right 2r1011 1)
(pop [1 0 1])

(defn has-bit-at-pos [val pos bit] (= bit (bit-and 1 (bit-shift-right val pos))))
(defn count-set-bits
  ([pos xs] (count-set-bits pos xs 0))
  ([pos xs acc]
   (if (empty? xs) acc
       (let [[x & xs] xs
             has-bit (if (has-bit-at-pos x pos 1) 1 0)]
         (recur pos xs (+ has-bit acc))))))

(count-set-bits 0 consumption)

(defn number-with-most-or-least-common-bits [cmp]
  (letfn
   [(cruncher
      ([xs] (cruncher xs 0 0))
      ([xs pos acc]
       (let [c (count xs)
             with-bits (count-set-bits pos xs)
             maybe-new-acc (bit-shift-left 1 pos)
             has-most-bits-set (apply cmp [with-bits (unchecked-divide-int c 2)])
             new-acc (if has-most-bits-set maybe-new-acc 0)
             ]
         (if (>= pos 12) acc
             (recur xs (inc pos) (+ acc new-acc)))))
      )]
    cruncher))

(def number-with-most-common-bits (number-with-most-or-least-common-bits >=))
(def number-with-least-common-bits (number-with-most-or-least-common-bits <=))
(number-with-least-common-bits [5 5 5 3 3 3 3 3])
(count-set-bits 2 [5 5 5 3 3 3 3])
(number-with-most-common-bits consumption)
(number-with-least-common-bits consumption)
(*
 (number-with-most-common-bits consumption)
 (number-with-least-common-bits consumption)
 )

; part two

(def diagnostic [
                 2r00100
                 2r11110
                 2r10110
                 2r10111
                 2r10101
                 2r01111
                 2r00111
                 2r11100
                 2r10000
                 2r11001
                 2r00010
                 2r01010
                 ])

(defn get-filterer [cmp]
  (letfn
   [(filter
      ([xs] (filter xs 11))
      ([xs pos]
       (if (or (< pos 0) (empty? xs)) xs
           (let [c (count xs)
                 _ (println xs)
                 with-bits (count-set-bits pos xs)
                 threshold (/ c 2)
                 target-bit (if (apply cmp [with-bits threshold]) 1 0)
                 _ (println "searching for " target-bit " at pos " pos " because " with-bits " =?= " threshold)
                 filtered-xs (filterv (fn [val] (has-bit-at-pos val pos target-bit)) xs)
                 _ (println filtered-xs)
                 ]
             (if (= 1 (count filtered-xs)) (get filtered-xs 0)
                 (recur filtered-xs (dec pos)))))))]
    filter))

(def oxygen-rating (get-filterer >=))
(def co2-rating (get-filterer <))

(oxygen-rating diagnostic)
(co2-rating diagnostic)

(* (oxygen-rating consumption) (co2-rating consumption))
